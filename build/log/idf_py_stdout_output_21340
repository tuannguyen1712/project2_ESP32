ets Jul 29 2019 12:21:46

rst:0x1 (POWERON_RESET),boot:0x13 (SPI_FAST_FLASH_BOOT)
configsip: 0, SPIWP:0xee
clk_drv:0x00,q_drv:0x00,d_drv:0x00,cs0_drv:0x00,hd_drv:0x00,wp_drv:0x00
mode:DIO, clock div:2
load:0x3fff0030,len:7084
ho 0 tail 12 room 4
load:0x40078000,len:15584
load:0x40080400,len:4
load:0x40080404,len:3876
entry 0x4008064c
[0;32mI (31) boot: ESP-IDF v5.1.1-dirty 2nd stage bootloader[0m
[0;32mI (31) boot: compile time Oct 14 2023 20:49:58[0m
[0;32mI (31) boot: Multicore bootloader[0m
[0;32mI (36) boot: chip revision: v3.1[0m
[0;32mI (40) boot.esp32: SPI Speed      : 40MHz[0m
[0;32mI (44) boot.esp32: SPI Mode       : DIO[0m
[0;32mI (49) boot.esp32: SPI Flash Size : 4MB[0m
[0;32mI (53) boot: Enabling RNG early entropy source...[0m
[0;32mI (59) boot: Partition Table:[0m
[0;32mI (62) boot: ## Label            Usage          Type ST Offset   Length[0m
[0;32mI (70) boot:  0 nvs              WiFi data        01 02 00009000 00006000[0m
[0;32mI (77) boot:  1 phy_init         RF data          01 01 0000f000 00001000[0m
[0;32mI (85) boot:  2 factory          factory app      00 00 00010000 00100000[0m
[0;32mI (92) boot: End of partition table[0m
[0;32mI (96) esp_image: segment 0: paddr=00010020 vaddr=3f400020 size=2712ch (160044) map[0m
[0;32mI (163) esp_image: segment 1: paddr=00037154 vaddr=3ffb0000 size=03790h ( 14224) load[0m
[0;32mI (168) esp_image: segment 2: paddr=0003a8ec vaddr=40080000 size=0572ch ( 22316) load[0m
[0;32mI (178) esp_image: segment 3: paddr=00040020 vaddr=400d0020 size=9aa3ch (633404) map[0m
[0;32mI (407) esp_image: segment 4: paddr=000daa64 vaddr=4008572c size=10d1ch ( 68892) load[0m
[0;32mI (447) boot: Loaded app from partition at offset 0x10000[0m
[0;32mI (447) boot: Disabling RNG early entropy source...[0m
[0;32mI (458) cpu_start: Multicore app[0m
[0;32mI (459) cpu_start: Pro cpu up.[0m
[0;32mI (459) cpu_start: Starting app cpu, entry point is 0x40081458[0m
[0;32mI (0) cpu_start: App cpu up.[0m
[0;32mI (477) cpu_start: Pro cpu start user code[0m
[0;32mI (477) cpu_start: cpu freq: 160000000 Hz[0m
[0;32mI (477) cpu_start: Application information:[0m
[0;32mI (482) cpu_start: Project name:     mqtt_tcp[0m
[0;32mI (487) cpu_start: App version:      1[0m
[0;32mI (491) cpu_start: Compile time:     Dec 18 2023 09:09:33[0m
[0;32mI (497) cpu_start: ELF file SHA256:  8497505cd257e7c2...[0m
[0;32mI (503) cpu_start: ESP-IDF:          v5.1.1-dirty[0m
[0;32mI (508) cpu_start: Min chip rev:     v0.0[0m
[0;32mI (513) cpu_start: Max chip rev:     v3.99 [0m
[0;32mI (518) cpu_start: Chip rev:         v3.1[0m
[0;32mI (523) heap_init: Initializing. RAM available for dynamic allocation:[0m
[0;32mI (530) heap_init: At 3FFAE6E0 len 00001920 (6 KiB): DRAM[0m
[0;32mI (536) heap_init: At 3FFB7E58 len 000281A8 (160 KiB): DRAM[0m
[0;32mI (542) heap_init: At 3FFE0440 len 00003AE0 (14 KiB): D/IRAM[0m
[0;32mI (549) heap_init: At 3FFE4350 len 0001BCB0 (111 KiB): D/IRAM[0m
[0;32mI (555) heap_init: At 40096448 len 00009BB8 (38 KiB): IRAM[0m
[0;32mI (563) spi_flash: detected chip: generic[0m
[0;32mI (566) spi_flash: flash io: dio[0m
[0;32mI (571) app_start: Starting scheduler on CPU0[0m
[0;32mI (575) app_start: Starting scheduler on CPU1[0m
[0;32mI (575) main_task: Started on CPU0[0m
[0;32mI (585) main_task: Calling app_main()[0m
[0;32mI (585) MQTT_EXAMPLE: [APP] Startup..[0m
[0;32mI (585) MQTT_EXAMPLE: [APP] Free memory: 279288 bytes[0m
[0;32mI (595) MQTT_EXAMPLE: [APP] IDF version: v5.1.1-dirty[0m
[0;32mI (615) example_connect: Start example_connect.[0m
I (635) wifi:wifi driver task: 3ffbf9b0, prio:23, stack:6656, core=0
I (635) wifi:wifi firmware version: ce9244d
I (635) wifi:wifi certification version: v7.0
I (635) wifi:config NVS flash: enabled
I (635) wifi:config nano formating: disabled
I (645) wifi:Init data frame dynamic rx buffer num: 32
I (645) wifi:Init management frame dynamic rx buffer num: 32
I (655) wifi:Init management short buffer num: 32
I (655) wifi:Init dynamic tx buffer num: 32
I (655) wifi:Init static rx buffer size: 1600
I (665) wifi:Init static rx buffer num: 10
I (665) wifi:Init dynamic rx buffer num: 32
[0;32mI (675) wifi_init: rx ba win: 6[0m
[0;32mI (675) wifi_init: tcpip mbox: 32[0m
[0;32mI (675) wifi_init: udp mbox: 6[0m
[0;32mI (685) wifi_init: tcp mbox: 6[0m
[0;32mI (685) wifi_init: tcp tx win: 5744[0m
[0;32mI (695) wifi_init: tcp rx win: 5744[0m
[0;32mI (695) wifi_init: tcp mss: 1440[0m
[0;32mI (695) wifi_init: WiFi IRAM OP enabled[0m
[0;32mI (705) wifi_init: WiFi RX IRAM OP enabled[0m
[0;32mI (715) phy_init: phy_version 4670,719f9f6,Feb 18 2021,17:07:07[0m
I (825) wifi:mode : sta (24:dc:c3:a6:d0:28)
I (825) wifi:enable tsf
[0;32mI (835) example_connect: Connecting to Wifi Ch√πa :/...[0m
[0;32mI (835) example_connect: Waiting for IP(s)[0m
I (3245) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
I (4405) wifi:state: init -> auth (b0)
I (4415) wifi:state: auth -> assoc (0)
I (5415) wifi:state: assoc -> init (2700)
I (5415) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
[0;32mI (5415) example_connect: Wi-Fi disconnected, trying to reconnect...[0m
[0;32mI (7835) example_connect: Wi-Fi disconnected, trying to reconnect...[0m
I (10245) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
I (10245) wifi:state: init -> auth (b0)
I (10255) wifi:state: auth -> assoc (0)
I (10265) wifi:state: assoc -> run (10)
I (10275) wifi:connected with Wifi Ch√πa :/, aid = 2, channel 1, BW20, bssid = 26:d1:fa:05:6e:c0
I (10285) wifi:security: WPA2-PSK, phy: bgn, rssi: -43
I (10285) wifi:pm start, type: 1

I (10335) wifi:AP's beacon interval = 102400 us, DTIM period = 2
[0;32mI (11285) esp_netif_handlers: example_netif_sta ip: 192.168.252.97, mask: 255.255.255.0, gw: 192.168.252.115[0m
[0;32mI (11285) example_connect: Got IPv4 event: Interface "example_netif_sta" address: 192.168.252.97[0m
[0;32mI (11615) example_connect: Got IPv6 event: Interface "example_netif_sta" address: fe80:0000:0000:0000:26dc:c3ff:fea6:d028, type: ESP_IP6_ADDR_IS_LINK_LOCAL[0m
[0;32mI (11615) example_common: Connected to example_netif_sta[0m
[0;32mI (11625) example_common: - IPv4 address: 192.168.252.97,[0m
[0;32mI (11625) example_common: - IPv6 address: fe80:0000:0000:0000:26dc:c3ff:fea6:d028, type: ESP_IP6_ADDR_IS_LINK_LOCAL[0m
[0;32mI (11645) uart: queue free spaces: 20[0m
[0;32mI (11645) uart: queue free spaces: 20[0m
[0;32mI (11655) MQTT_EXAMPLE: Other event id:7[0m
[0;32mI (11655) main_task: Returned from app_main()[0m
[0;32mI (11735) MQTT_EXAMPLE: MQTT_EVENT_CONNECTED[0m
[0;32mI (11875) MQTT_EXAMPLE: MQTT_EVENT_SUBSCRIBED, msg_id=12237[0m
[0;32mI (16185) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (16185) MQTT_EXAMPLE: uart rx break[0m
[0;32mI (16675) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (16675) MQTT_EXAMPLE: [UART DATA]: 1[0m
[0;32mI (41305) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (41305) MQTT_EXAMPLE: uart rx break[0m
[0;32mI (41305) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (41305) MQTT_EXAMPLE: uart rx break[0m
[0;32mI (41305) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (41315) MQTT_EXAMPLE: uart rx break[0m
[0;32mI (41325) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (41325) MQTT_EXAMPLE: [UART DATA]: 3[0m
 sta (24:dc:c3:a6:d0:28)
I (825) wifi:enable tsf
[0;32mI (835) example_connect: Connecting to Wifi Ch√πa :/...[0m
[0;32mI (835) example_connect: Waiting for IP(s)[0m
I (3245) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
I (4405) wifi:state: init -> auth (b0)
I (4735) wifi:state: auth -> assoc (0)
I (5735) wifi:state: assoc -> init (2700)
I (5735) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
[0;32mI (5735) example_connect: Wi-Fi disconnected, trying to reconnect...[0m
[0;32mI (8155) example_connect: Wi-Fi disconnected, trying to reconnect...[0m
I (10565) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
I (10565) wifi:state: init -> auth (b0)
I (10575) wifi:state: auth -> assoc (0)
I (10575) wifi:state: assoc -> run (10)
I (10605) wifi:connected with Wifi Ch√πa :/, aid = 2, channel 1, BW20, bssid = 26:d1:fa:05:6e:c0
I (10605) wifi:security: WPA2-PSK, phy: bgn, rssi: -34
I (10605) wifi:pm start, type: 1

I (10615) wifi:AP's beacon interval = 102400 us, DTIM period = 2
[0;32mI (11615) esp_netif_handlers: example_netif_sta ip: 192.168.252.97, mask: 255.255.255.0, gw: 192.168.252.115[0m
[0;32mI (11615) example_connect: Got IPv4 event: Interface "example_netif_sta" address: 192.168.252.97[0m
[0;32mI (12615) example_connect: Got IPv6 event: Interface "example_netif_sta" address: fe80:0000:0000:0000:26dc:c3ff:fea6:d028, type: ESP_IP6_ADDR_IS_LINK_LOCAL[0m
[0;32mI (12615) example_common: Connected to example_netif_sta[0m
[0;32mI (12625) example_common: - IPv4 address: 192.168.252.97,[0m
[0;32mI (12625) example_common: - IPv6 address: fe80:0000:0000:0000:26dc:c3ff:fea6:d028, type: ESP_IP6_ADDR_IS_LINK_LOCAL[0m
[0;32mI (12645) uart: queue free spaces: 20[0m
[0;32mI (12645) uart: queue free spaces: 20[0m
[0;32mI (12655) MQTT_EXAMPLE: Other event id:7[0m
[0;32mI (12655) main_task: Returned from app_main()[0m
[0;32mI (12775) MQTT_EXAMPLE: MQTT_EVENT_CONNECTED[0m
[0;32mI (12835) MQTT_EXAMPLE: MQTT_EVENT_SUBSCRIBED, msg_id=53873[0m
[0;32mI (14595) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (14595) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (24595) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (24605) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (34545) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (34545) MQTT_EXAMPLE: [UART DATA]: 82[0m
I (34785) wifi:<ba-add>idx:0 (ifx:0, 26:d1:fa:05:6e:c0), tid:0, ssn:16, winSize:64
[0;32mI (44555) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (44555) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (54555) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (54555) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (64505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (64505) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (74505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (74505) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (84505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (84505) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (94505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (94505) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (104505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (104505) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (114505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (114505) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (124505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (124505) MQTT_EXAMPLE: [UART DATA]: 86[0m
[0;32mI (134505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (134505) MQTT_EXAMPLE: [UART DATA]: 84[0m
[0;32mI (144505) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (144505) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (154355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (154355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (164355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (164355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (174355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (174355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (184355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (184355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (194355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (194355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (204355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (204355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (214355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (214355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (224355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (224355) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (234355) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (234365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (244365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (244365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (254365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (254365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;31mE (254735) transport_base: poll_read select error 104, errno = Connection reset by peer, fd = 54[0m
[0;31mE (254735) mqtt_client: Poll read error: 119, aborting connection[0m
[0;32mI (254745) MQTT_EXAMPLE: MQTT_EVENT_DISCONNECTED[0m
[0;32mI (264365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (264365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;33mW (264365) mqtt_client: Publish: Losing qos0 data when client not connected[0m
[0;32mI (269745) MQTT_EXAMPLE: Other event id:7[0m
[0;32mI (272565) MQTT_EXAMPLE: MQTT_EVENT_CONNECTED[0m
[0;32mI (272965) MQTT_EXAMPLE: MQTT_EVENT_SUBSCRIBED, msg_id=57029[0m
[0;32mI (274365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (274365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (284365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (284365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (294365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (294365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (304365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (304365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (314365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (314365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (324365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (324365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (334365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (334365) MQTT_EXAMPLE: [UART DATA]: 82[0m
I (337375) wifi:<ba-add>idx:1 (ifx:0, 26:d1:fa:05:6e:c0), tid:2, ssn:16, winSize:64
[0;32mI (344365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (344365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (354365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (354365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (364365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (364365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (374365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (374365) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (384365) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (384375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (394375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (394375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (404375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (404375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (414375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (414375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (424375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (424375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (434375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (434375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (444375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (444375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (454375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (454375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (464375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (464375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (474375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (474375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (484375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (484375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (494375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (494375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (504375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (504375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (514375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (514375) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (524375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (524385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (534375) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (534385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (544385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (544385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (554385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (554385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (564385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (564385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (574385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (574385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (584385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (584385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (594385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (594385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (604385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (604385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (614385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (614385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (624385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (624385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (634385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (634385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (644385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (644385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (654385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (654385) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (664385) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (664395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (674395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (674395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (684395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (684395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (694395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (694395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (704395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (704395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (714395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (714395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (724395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (724395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (734395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (734395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (744395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (744395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (754395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (754395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (764395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (764395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (774395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (774395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (784395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (784395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (794395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (794395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (804395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (804395) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (814395) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (814405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (824405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (824405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (834405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (834405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (844405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (844405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (854405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (854405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (864405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (864405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (874405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (874405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (884405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (884405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (894405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (894405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (904405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (904405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (914405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (914405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (924405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (924405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (934405) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (934405) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (944345) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (944345) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (954345) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (954345) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (964345) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (964345) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (974345) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (974345) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (984345) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (984345) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (987605) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (987605) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (997605) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (997615) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (1007615) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (1007615) MQTT_EXAMPLE: [UART DATA]: 82[0m
[0;32mI (1017615) MQTT_EXAMPLE: uart[2] event:[0m
[0;32mI (1017615) MQTT_EXAMPLE: [UART DATA]: 82[0m
I (1020965) wifi:state: run -> init (1c0)
I (1020975) wifi:pm stop, total sleep time: 827494875 us / 1010363398 us

I (1020975) wifi:<ba-del>idx:0, tid:0
I (1020975) wifi:<ba-del>idx:1, tid:2
I (1020975) wifi:new:<1,0>, old:<1,0>, ap:<255,255>, sta:<1,0>, prof:1
[0;32mI (1020985) example_connect: Wi-Fi disconnected, trying to reconnect...[0m
[0;31mE (1020985) transport_base: poll_read select error 113, errno = Software caused connection abort, fd = 54[0m
[0;31mE (1021005) mqtt_client: Poll read error: 119, aborting connection[0m
[0;32mI (1021005) MQTT_EXAMPLE: MQTT_EVENT_DISCONNECTED[0m
[0;32mI (1023405) example_connect: Wi-Fi disconnected, trying to reconnect...[0m
